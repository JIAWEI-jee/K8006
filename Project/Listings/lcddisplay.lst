C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCDDISPLAY
OBJECT MODULE PLACED IN .\Objects\lcddisplay.obj
COMPILER INVOKED BY: C:\program_list\keil\C51\BIN\C51.EXE ..\hardware\LCDdisplay\lcddisplay.c LARGE OPTIMIZE(8,SPEED) BR
                    -OWSE INCDIR(..\hardware\DELAY;..\hardware\ADC;..\hardware\Flash;..\hardware\Uart;..\hardware\Key;..\hardware\Pwm;..\hard
                    -ware\WDT;..\hardware\Timer;..\hardware\LCDdisplay;..\hardware\PID) DEBUG OBJECTEXTEND PRINT(.\Listings\lcddisplay.lst) T
                    -ABS(2) OBJECT(.\Objects\lcddisplay.obj)

line level    source

   1          #include "lcddisplay.h"
   2          #include "flash.h"
   3          
   4          display_set lcd_set = {0,0};
   5          
   6          unsigned char guc_DisFreshStep = 0;
   7          unsigned char LCD_STD = 0;
   8          void set_gap ( u8 gap );
   9          void set_time ( u8 temp );
  10          
  11          void LCD_Init ( void )
  12          {
  13   1        /***********************************LCD配置初始化**************************************/
  14   1        LCDCON |= 0xE8;                     //使能LCD，50K电阻，1/3bias
  15   1        COMP1EN |= 0x06;                    //COM使能P11 P12
  16   1        COMP2EN |= 0x08;                    //COM使能P23
  17   1        COMP3EN |= 0x10;                    //COM使能P34
  18   1      
  19   1        SEGP1EN |= 0xF8;                    //SEG口使能P1口，P17 P16 P15 P14 P13 为SEG1 SEG2 SEG3 SEG4 SEG5
  20   1      
  21   1        SEG1 = 0;
  22   1        SEG2 = 0;
  23   1        SEG3 = 0;
  24   1        SEG4 = 0;
  25   1        SEG5 = 0;
  26   1      }
  27          
  28          void lcd_off(u8 std)
  29          {
  30   1       LCD_STD = std;
  31   1      }
  32          
  33          void lcd_clear_all ( void )
  34          {
  35   1        
  36   1        lcd_set.gap_display = Clear_lcd;
  37   1        lcd_set.time_display = Clear_lcd;
  38   1      }
  39          void lcd_error ( void )
  40          {
  41   1        static u8 error_std = 0;
  42   1        if ( error_std == 0 )
  43   1        {
  44   2          
  45   2          lcd_set.gap_display = Clear_lcd;
  46   2          lcd_set.time_display = Clear_lcd;
  47   2          error_std = 1;
  48   2        }
  49   1        else if ( error_std == 1 )
  50   1        {
  51   2          
  52   2          lcd_set.gap_display = Error;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 2   

  53   2          error_std = 0;
  54   2        }
  55   1      
  56   1      }
  57          void lcd_display_time ( u8 time )
  58          {
  59   1        
  60   1        lcd_set.time_display = time;
  61   1      }
  62          
  63          void lcd_display_gap ( u8 gap )
  64          {
  65   1       
  66   1        lcd_set.gap_display = gap;
  67   1      
  68   1      }
  69          void lcd_display_On ( void )
  70          {
  71   1      
  72   1        lcd_set.gap_display = all_on;
  73   1        lcd_set.time_display = all_on;
  74   1      }
  75          void LCD_Display ( void )
  76          {
  77   1       if ( (LCD_STD == ON)||(LCD_STD == Error))
  78   1         {
  79   2           LCDCON |= 0xE8;
  80   2        switch ( guc_DisFreshStep )
  81   2        {
  82   3          case Frame0_COM0:
  83   3          
  84   3          LCDCON &=~ 0x10;   //FRAME 0
  85   3      
  86   3            COM0 = 1;
  87   3            COM1 = 0;
  88   3            COM2 = 0;
  89   3            COM3 = 0;
  90   3      
  91   3            set_time ( lcd_set.time_display );
  92   3            set_gap ( lcd_set.gap_display );
  93   3            guc_DisFreshStep = Frame0_COM1;
  94   3            break;
  95   3          case Frame0_COM1:
  96   3            COM0 = 0;
  97   3            COM1 = 1;
  98   3            COM2 = 0;
  99   3            COM3 = 0;
 100   3            set_time ( lcd_set.time_display );
 101   3            set_gap ( lcd_set.gap_display );
 102   3            guc_DisFreshStep = Frame0_COM2;
 103   3            break;
 104   3          case Frame0_COM2:
 105   3      
 106   3            COM0 = 0;
 107   3            COM1 = 0;
 108   3            COM2 = 1;
 109   3            COM3 = 0;
 110   3      
 111   3            set_time ( lcd_set.time_display );
 112   3            set_gap ( lcd_set.gap_display );
 113   3            guc_DisFreshStep = Frame0_COM3;
 114   3            break;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 3   

 115   3          case Frame0_COM3:
 116   3      
 117   3            COM0 = 0;
 118   3            COM1 = 0;
 119   3            COM2 = 0;
 120   3            COM3 = 1;
 121   3            set_time ( lcd_set.time_display );
 122   3      
 123   3            set_gap ( lcd_set.gap_display );
 124   3            guc_DisFreshStep = Frame1_COM0;
 125   3            break;
 126   3          case Frame1_COM0:
 127   3            LCDCON |= 0x10;   //FRAME 1
 128   3      
 129   3            COM0 = 1;
 130   3            COM1 = 0;
 131   3            COM2 = 0;
 132   3            COM3 = 0;
 133   3      
 134   3      
 135   3            set_time ( lcd_set.time_display );
 136   3      
 137   3            set_gap ( lcd_set.gap_display );
 138   3      
 139   3            guc_DisFreshStep = Frame1_COM1;
 140   3            break;
 141   3          case Frame1_COM1:
 142   3      
 143   3            COM0 = 0;
 144   3            COM1 = 1;
 145   3            COM2 = 0;
 146   3            COM3 = 0;
 147   3            set_time ( lcd_set.time_display );
 148   3      
 149   3            set_gap ( lcd_set.gap_display );
 150   3            guc_DisFreshStep = Frame1_COM2;
 151   3            break;
 152   3          case Frame1_COM2:
 153   3      
 154   3            COM0 = 0;
 155   3            COM1 = 0;
 156   3            COM2 = 1;
 157   3            COM3 = 0;
 158   3            set_time ( lcd_set.time_display );
 159   3            set_gap ( lcd_set.gap_display );
 160   3            guc_DisFreshStep = Frame1_COM3;
 161   3            break;
 162   3          case Frame1_COM3:
 163   3      
 164   3            COM0 = 0;
 165   3            COM1 = 0;
 166   3            COM2 = 0;
 167   3            COM3 = 1;
 168   3      
 169   3      
 170   3            set_time ( lcd_set.time_display );
 171   3      
 172   3            set_gap ( lcd_set.gap_display );
 173   3      
 174   3            guc_DisFreshStep = Frame0_COM0;
 175   3            break;
 176   3          default:
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 4   

 177   3            guc_DisFreshStep = Frame0_COM0;
 178   3            break;
 179   3        }
 180   2       }
 181   1       else if (LCD_STD == OFF)
 182   1       {
 183   2          LCDCON = 0x68;
 184   2       }
 185   1      }
 186          
 187          //void LCD_Display_seg ( void )
 188          //{
 189          //
 190          //  switch ( guc_DisFreshStep )
 191          //  {
 192          //    case Frame0_SEG1:
 193          //      LCDCON &=~ 0x10;   //FRAME 0
 194          //
 195          //      SEG1 = 0;
 196          //      SEG2 = 0;
 197          //      SEG3 = 0;
 198          //      SEG4 = 0;
 199          //      SEG5 = 1;
 200          //
 201          //      COM0 = 0;
 202          //      COM1 = 0;
 203          //      COM2 = 1;
 204          //      COM3 = 0;
 205          //
 206          //
 207          //      guc_DisFreshStep = Frame0_SEG2;
 208          //      break;
 209          //    case Frame0_SEG2:
 210          //      SEG1 = 0;
 211          //      SEG2 = 0;
 212          //      SEG3 = 0;
 213          //      SEG4 = 1;
 214          //      SEG5 = 0;
 215          //
 216          //      COM0 = 0;
 217          //      COM1 = 1;
 218          //      COM2 = 1;
 219          //      COM3 = 1;
 220          //      guc_DisFreshStep = Frame0_SEG3;
 221          //      break;
 222          //    case Frame0_SEG3:
 223          //      SEG1 = 0;
 224          //      SEG2 = 0;
 225          //      SEG3 = 1;
 226          //      SEG4 = 0;
 227          //      SEG5 = 0;
 228          //
 229          //      COM0 = 1;
 230          //      COM1 = 1;
 231          //      COM2 = 1;
 232          //      COM3 = 1;
 233          //
 234          //      guc_DisFreshStep = Frame0_SEG4;
 235          //      break;
 236          //    case Frame0_SEG4:
 237          //      SEG1 = 0;
 238          //      SEG2 = 1;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 5   

 239          //      SEG3 = 0;
 240          //      SEG4 = 0;
 241          //      SEG5 = 0;
 242          //
 243          //
 244          //      COM0 = 0;
 245          //      COM1 = 0;
 246          //      COM2 = 0;
 247          //      COM3 = 0;
 248          //      guc_DisFreshStep = Frame0_SEG5;
 249          //      break;
 250          //    case Frame0_SEG5:
 251          //      SEG1 = 1;
 252          //      SEG2 = 0;
 253          //      SEG3 = 0;
 254          //      SEG4 = 0;
 255          //      SEG5 = 0;
 256          //
 257          //
 258          //      COM0 = 0;
 259          //      COM1 = 0;
 260          //      COM2 = 0;
 261          //      COM3 = 0;
 262          //      guc_DisFreshStep = Frame1_SEG1;
 263          //      break;
 264          //    case Frame1_SEG1:
 265          //      LCDCON |= 0x10;   //FRAME 1
 266          //      SEG1 = 0;
 267          //      SEG2 = 0;
 268          //      SEG3 = 0;
 269          //      SEG4 = 0;
 270          //      SEG5 = 1;
 271          //
 272          //
 273          //
 274          //
 275          //
 276          //      COM0 = 0;
 277          //      COM1 = 0;
 278          //      COM2 = 0;
 279          //      COM3 = 0;
 280          //
 281          //      guc_DisFreshStep = Frame1_SEG2;
 282          //      break;
 283          //    case Frame1_SEG2:
 284          //      SEG1 = 0;
 285          //      SEG2 = 0;
 286          //      SEG3 = 0;
 287          //      SEG4 = 1;
 288          //      SEG5 = 0;
 289          //
 290          //
 291          //      COM0 = 0;
 292          //      COM1 = 1;
 293          //      COM2 = 1;
 294          //      COM3 = 1;
 295          //
 296          //      guc_DisFreshStep = Frame1_SEG3;
 297          //      break;
 298          //    case Frame1_SEG3:
 299          //      SEG1 = 0;
 300          //      SEG2 = 0;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 6   

 301          //      SEG3 = 1;
 302          //      SEG4 = 0;
 303          //      SEG5 = 0;
 304          //
 305          //      COM0 = 1;
 306          //      COM1 = 1;
 307          //      COM2 = 1;
 308          //      COM3 = 1;
 309          //
 310          //
 311          //      guc_DisFreshStep = Frame1_SEG4;
 312          //      break;
 313          //    case Frame1_SEG4:
 314          //      SEG1 = 0;
 315          //      SEG2 = 1;
 316          //      SEG3 = 0;
 317          //      SEG4 = 0;
 318          //      SEG5 = 0;
 319          //
 320          //
 321          //
 322          //
 323          //      COM0 = 0;
 324          //      COM1 = 0;
 325          //      COM2 = 0;
 326          //      COM3 = 0;
 327          //
 328          //
 329          //      guc_DisFreshStep = Frame1_SEG5;
 330          //      break;
 331          //    case Frame1_SEG5:
 332          //      SEG1 = 1;
 333          //      SEG2 = 0;
 334          //      SEG3 = 0;
 335          //      SEG4 = 0;
 336          //      SEG5 = 0;
 337          //
 338          //
 339          //
 340          //      COM0 = 0;
 341          //      COM1 = 0;
 342          //      COM2 = 0;
 343          //      COM3 = 0;
 344          //
 345          //
 346          //
 347          //
 348          //      guc_DisFreshStep = Frame0_SEG1;
 349          //      break;
 350          //    default:
 351          //      guc_DisFreshStep = Frame0_SEG1;
 352          //      break;
 353          //  }
 354          //}
 355          
 356          
 357          //void set_time(void)
 358          //{
 359          //
 360          
 361          
 362          //}
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 7   

 363          void set_gap ( u8 number )
 364          {
 365   1        switch ( number )
 366   1        {
 367   2          case GAP_H:
 368   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 369   2            {
 370   3      
 371   3              SEG3 = 0;
 372   3              SEG4 = 0;
 373   3            }
 374   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 375   2            {
 376   3              SEG3 = 1;
 377   3              SEG4 = 1;
 378   3            }
 379   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 380   2            {
 381   3              SEG3 = 1;
 382   3              SEG4 = 1;
 383   3            }
 384   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 385   2            {
 386   3              SEG3 = 0;
 387   3              SEG4 = 1;
 388   3            }
 389   2      
 390   2            break;
 391   2          case GAP_1:
 392   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 393   2            {
 394   3      
 395   3              SEG3 = 0;
 396   3              SEG4 = 0;
 397   3            }
 398   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 399   2            {
 400   3              SEG3 = 1;
 401   3              SEG4 = 0;
 402   3            }
 403   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 404   2            {
 405   3              SEG3 = 1;
 406   3              SEG4 = 0;
 407   3            }
 408   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 409   2            {
 410   3              SEG3 = 0;
 411   3              SEG4 = 0;
 412   3            }
 413   2            break;
 414   2      
 415   2          case GAP_2:
 416   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 417   2            {
 418   3      
 419   3              SEG3 = 1;
 420   3              SEG4 = 0;
 421   3            }
 422   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 423   2            {
 424   3              SEG3 = 1;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 8   

 425   3              SEG4 = 0;
 426   3            }
 427   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 428   2            {
 429   3              SEG3 = 0;
 430   3              SEG4 = 1;
 431   3            }
 432   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 433   2            {
 434   3              SEG3 = 1;
 435   3              SEG4 = 1;
 436   3            }
 437   2            break;
 438   2      
 439   2          case GAP_3:
 440   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 441   2            {
 442   3      
 443   3              SEG3 = 1;
 444   3              SEG4 = 0;
 445   3            }
 446   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 447   2            {
 448   3              SEG3 = 1;
 449   3              SEG4 = 0;
 450   3            }
 451   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 452   2            {
 453   3              SEG3 = 1;
 454   3              SEG4 = 1;
 455   3            }
 456   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 457   2            {
 458   3              SEG3 = 1;
 459   3              SEG4 = 0;
 460   3            }
 461   2            break;
 462   2          case GAP_4:
 463   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 464   2            {
 465   3      
 466   3              SEG3 = 0;
 467   3              SEG4 = 0;
 468   3            }
 469   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 470   2            {
 471   3              SEG3 = 1;
 472   3              SEG4 = 1;
 473   3            }
 474   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 475   2            {
 476   3              SEG3 = 1;
 477   3              SEG4 = 1;
 478   3            }
 479   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 480   2            {
 481   3              SEG3 = 0;
 482   3              SEG4 = 0;
 483   3            }
 484   2            break;
 485   2          case GAP_5:
 486   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 9   

 487   2            {
 488   3      
 489   3              SEG3 = 1;
 490   3              SEG4 = 0;
 491   3            }
 492   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 493   2            {
 494   3              SEG3 = 0;
 495   3              SEG4 = 1;
 496   3            }
 497   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 498   2            {
 499   3              SEG3 = 1;
 500   3              SEG4 = 1;
 501   3            }
 502   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 503   2            {
 504   3              SEG3 = 1;
 505   3              SEG4 = 0;
 506   3            }
 507   2            break;
 508   2          case GAP_6:
 509   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 510   2            {
 511   3      
 512   3              SEG3 = 1;
 513   3              SEG4 = 0;
 514   3            }
 515   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 516   2            {
 517   3              SEG3 = 0;
 518   3              SEG4 = 1;
 519   3            }
 520   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 521   2            {
 522   3              SEG3 = 1;
 523   3              SEG4 = 1;
 524   3            }
 525   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 526   2            {
 527   3              SEG3 = 1;
 528   3              SEG4 = 1;
 529   3            }
 530   2            break;
 531   2          case GAP_7:
 532   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 533   2            {
 534   3      
 535   3              SEG3 = 1;
 536   3              SEG4 = 0;
 537   3            }
 538   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 539   2            {
 540   3              SEG3 = 1;
 541   3              SEG4 = 0;
 542   3            }
 543   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 544   2            {
 545   3              SEG3 = 1;
 546   3              SEG4 = 0;
 547   3            }
 548   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 10  

 549   2            {
 550   3              SEG3 = 0;
 551   3              SEG4 = 0;
 552   3            }
 553   2            break;
 554   2          case GAP_8:
 555   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 556   2            {
 557   3      
 558   3              SEG3 = 1;
 559   3              SEG4 = 0;
 560   3            }
 561   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 562   2            {
 563   3              SEG3 = 1;
 564   3              SEG4 = 1;
 565   3            }
 566   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 567   2            {
 568   3              SEG3 = 1;
 569   3              SEG4 = 1;
 570   3            }
 571   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 572   2            {
 573   3              SEG3 = 1;
 574   3              SEG4 = 1;
 575   3            }
 576   2            break;
 577   2          case GAP_9:
 578   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 579   2            {
 580   3      
 581   3              SEG3 = 1;
 582   3              SEG4 = 0;
 583   3            }
 584   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 585   2            {
 586   3              SEG3 = 1;
 587   3              SEG4 = 1;
 588   3            }
 589   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 590   2            {
 591   3              SEG3 = 1;
 592   3              SEG4 = 1;
 593   3            }
 594   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 595   2            {
 596   3              SEG3 = 1;
 597   3              SEG4 = 0;
 598   3            }
 599   2            break;
 600   2          case Error:
 601   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 602   2            {
 603   3      
 604   3              SEG3 = 1;
 605   3              SEG4 = 0;
 606   3            }
 607   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 608   2            {
 609   3              SEG3 = 0;
 610   3              SEG4 = 1;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 11  

 611   3            }
 612   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 613   2            {
 614   3              SEG3 = 0;
 615   3              SEG4 = 1;
 616   3            }
 617   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 618   2            {
 619   3              SEG3 = 0;
 620   3              SEG4 = 1;
 621   3            }
 622   2            break;
 623   2          case Clear_lcd:
 624   2            SEG1 = 0;
 625   2            SEG2 = 0;
 626   2            SEG3 = 0;
 627   2            SEG4 = 0;
 628   2            SEG5 = 0;
 629   2            break;
 630   2          case all_on:
 631   2            SEG1 = 1;
 632   2            SEG2 = 1;
 633   2            SEG3 = 1;
 634   2            SEG4 = 1;
 635   2            SEG5 = 1;
 636   2            break;
 637   2        }
 638   1      
 639   1      }
 640          
 641          void set_time ( u8 number )
 642          {
 643   1        switch ( number )
 644   1        {
 645   2          case TIMER_ON:
 646   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 647   2            {
 648   3              SEG1 = 0;
 649   3              SEG2 = 0;
 650   3              SEG5 = 0;
 651   3            }
 652   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 653   2            {
 654   3              SEG1 = 1;
 655   3              SEG2 = 1;
 656   3              SEG5 = 1;
 657   3            }
 658   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 659   2            {
 660   3              SEG1 = 0;
 661   3              SEG2 = 1;
 662   3              SEG5 = 0;
 663   3            }
 664   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 665   2            {
 666   3              SEG1 = 1;
 667   3              SEG2 = 1;
 668   3              SEG5 = 1;
 669   3            }
 670   2      
 671   2            break;
 672   2          case TIMER_0_5H:
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 12  

 673   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 674   2            {
 675   3              SEG1 = 1;
 676   3              SEG2 = 0;
 677   3              SEG5 = 0;
 678   3            }
 679   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 680   2            {
 681   3              SEG1 = 1;
 682   3              SEG2 = 1;
 683   3              SEG5 = 1;
 684   3            }
 685   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 686   2            {
 687   3              SEG1 = 0;
 688   3              SEG2 = 0;
 689   3              SEG5 = 0;
 690   3            }
 691   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 692   2            {
 693   3              SEG1 = 1;
 694   3              SEG2 = 1;
 695   3              SEG5 = 1;
 696   3            }
 697   2            break;
 698   2      
 699   2          case TIMER_1H:
 700   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 701   2            {
 702   3              SEG1 = 0;
 703   3              SEG2 = 0;
 704   3              SEG5 = 0;
 705   3            }
 706   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 707   2            {
 708   3              SEG1 = 1;
 709   3              SEG2 = 1;
 710   3              SEG5 = 1;
 711   3            }
 712   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 713   2            {
 714   3              SEG1 = 1;
 715   3              SEG2 = 0;
 716   3              SEG5 = 0;
 717   3            }
 718   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 719   2            {
 720   3              SEG1 = 1;
 721   3              SEG2 = 1;
 722   3              SEG5 = 1;
 723   3            }
 724   2            break;
 725   2      
 726   2          case TIMER_2H:
 727   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 728   2            {
 729   3              SEG1 = 0;
 730   3              SEG2 = 0;
 731   3              SEG5 = 1;
 732   3            }
 733   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 734   2            {
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 13  

 735   3              SEG1 = 1;
 736   3              SEG2 = 1;
 737   3              SEG5 = 1;
 738   3            }
 739   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 740   2            {
 741   3              SEG1 = 0;
 742   3              SEG2 = 0;
 743   3              SEG5 = 0;
 744   3            }
 745   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 746   2            {
 747   3              SEG1 = 1;
 748   3              SEG2 = 1;
 749   3              SEG5 = 1;
 750   3            }
 751   2            break;
 752   2          case TIMER_4H:
 753   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 754   2            {
 755   3              SEG1 = 0;
 756   3              SEG2 = 1;
 757   3              SEG5 = 0;
 758   3            }
 759   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 760   2            {
 761   3              SEG1 = 1;
 762   3              SEG2 = 1;
 763   3              SEG5 = 1;
 764   3            }
 765   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 766   2            {
 767   3              SEG1 = 0;
 768   3              SEG2 = 0;
 769   3              SEG5 = 0;
 770   3            }
 771   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 772   2            {
 773   3              SEG1 = 1;
 774   3              SEG2 = 1;
 775   3              SEG5 = 1;
 776   3            }
 777   2            break;
 778   2          case TIMER_8H:
 779   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 780   2            {
 781   3              SEG1 = 0;
 782   3              SEG2 = 0;
 783   3              SEG5 = 0;
 784   3            }
 785   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 786   2            {
 787   3              SEG1 = 1;
 788   3              SEG2 = 1;
 789   3              SEG5 = 1;
 790   3            }
 791   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 792   2            {
 793   3              SEG1 = 0;
 794   3              SEG2 = 0;
 795   3              SEG5 = 1;
 796   3            }
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/28/2020 18:17:17 PAGE 14  

 797   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 798   2            {
 799   3              SEG1 = 1;
 800   3              SEG2 = 1;
 801   3              SEG5 = 1;
 802   3            }
 803   2            break;
 804   2        }
 805   1      
 806   1      }
 807          
 808          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1436    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
