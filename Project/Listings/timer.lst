C51 COMPILER V9.56.0.0   TIMER                                                             08/07/2020 15:18:25 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\timer.obj
COMPILER INVOKED BY: C:\program_list\keil\C51\BIN\C51.EXE ..\hardware\Timer\timer.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDI
                    -R(..\hardware\DELAY;..\hardware\ADC;..\hardware\Flash;..\hardware\Uart;..\hardware\Key;..\hardware\Pwm;..\hardware\WDT;.
                    -.\hardware\Timer;..\hardware\LCDdisplay;..\hardware\PID) DEBUG OBJECTEXTEND PRINT(.\Listings\timer.lst) TABS(2) OBJECT(.
                    -\Objects\timer.obj)

line level    source

   1          #include "timer.h"
   2          #include "flash.h"
   3          #include "uart.h"
   4          #include "lcddisplay.h"
   5          
   6          //----------------time---------------
   7          u16 time_cnt = 0;
   8          u16 time_sec = 0;
   9          u16 cnt_heat_time = 0;
  10          u8 over_rang_time_std = 0;
  11          u8 Gap_protect_std = 0 ;
  12          u8 On_stay = 0;
  13          u8  Open_Heat_Value = 0;
  14          u8 Heat_start_std = 0;
  15          u16 time_heat = 0;
  16          u16 temp_time = 0 ;
  17          void set_time_sec_val ( u16 sec )
  18          {
  19   1        time_sec = sec;
  20   1        time_cnt = 0;
  21   1        gm_printf ( "set time second:%d\r\n",sec );
  22   1      }
  23          
  24          
  25          static void set_heat_val ( void )
  26          {
  27   1        if ( Heat_start_std == 1 )
  28   1        {
  29   2          if ( ++time_heat > Heat_Value )
  30   2          {
  31   3            KEY_printf ( "exchange_heat_value \r\n" );
  32   3            Heat_start_std = 0;
  33   3            time_heat = 0;
  34   3            if ( flash_info.gap > 1 )
  35   3            {
  36   4              Open_Heat_Value = corrected_value_GAP_4_temp;
  37   4            }
  38   3            else
  39   3            {
  40   4              Open_Heat_Value = 2;
  41   4            }
  42   3      
  43   3          }
  44   2        }
  45   1      }
  46          
  47          void set_time_sec ( void )
  48          {
  49   1        time_cnt = 0;
  50   1        if ( flash_info.timer == TIMER_ON )
  51   1        {
  52   2          time_sec = 0;
C51 COMPILER V9.56.0.0   TIMER                                                             08/07/2020 15:18:25 PAGE 2   

  53   2          cnt_heat_time = 0;
  54   2          temp_time = 0;
  55   2        }
  56   1        else if ( flash_info.timer == TIMER_0_5H )
  57   1        {
  58   2          time_sec = 30*60;
  59   2          cnt_heat_time = 0;
  60   2          temp_time = 0;
  61   2        }
  62   1        else if ( flash_info.timer == TIMER_1H )
  63   1        {
  64   2          time_sec = 60*60;
  65   2          cnt_heat_time = 0;
  66   2          temp_time = 0;
  67   2        }
  68   1        else if ( flash_info.timer == TIMER_2H )
  69   1        {
  70   2          time_sec = 2*60*60;
  71   2          cnt_heat_time = 0;
  72   2          temp_time = 0;
  73   2        }
  74   1        else if ( flash_info.timer == TIMER_4H )
  75   1        {
  76   2          time_sec = 4*60*60;
  77   2          cnt_heat_time = 0;
  78   2          temp_time = 0;
  79   2        }
  80   1        else if ( flash_info.timer == TIMER_8H )
  81   1        {
  82   2          time_sec = 8*60*60;
  83   2          cnt_heat_time = 0;
  84   2          temp_time = 0;
  85   2        }
  86   1        gm_printf ( "time second:%d \r\n",time_sec );
  87   1      }
  88          
  89          
  90          void time0_init ( void )
  91          {
  92   1        /**********************************TIM0配置初始化**************************************/
  93   1        TCON1 = 0x00;           //Tx0定时器时钟为Fosc/12
  94   1        TMOD = 0x00;            //16位重装载定时器/计数器
  95   1      
  96   1        //Tim0计算时间  = (65536 - 0xFACB) * (1 / (Fosc /Timer分频系数))
  97   1        //        = 1333 / (16000000 / 12)
  98   1        //        = 1 ms
  99   1      
 100   1        //定时1ms
 101   1        //反推初值  = 65536 - ((1/1000) / (1/(Fosc / Timer分频系数)))
 102   1        //        = 65536 - ((1/1000) / (1/(16000000 / 12)))
 103   1        //      = 65536 - 1333
 104   1        //      = 0xFACB
 105   1      //    TH0 = 0xCB;  10ms
 106   1      //  TL0 = 0xEB;
 107   1        TH0 = 0xF5;
 108   1        TL0 = 0x96;             //T0定时时间2ms     0x96     10ms   0xFB
 109   1        IE |= 0x02;             //打开T0中断
 110   1        TCON |= 0x10;           //使能T0
 111   1      }
 112          
 113          
 114          
C51 COMPILER V9.56.0.0   TIMER                                                             08/07/2020 15:18:25 PAGE 3   

 115          //10ms
 116          void TIMER0_Rpt ( void ) interrupt TIMER0_VECTOR
 117          {
 118   1        if ( get_device_state() == ON ) //flash_info.timer != TIMER_ON &&
 119   1        {
 120   2          time_cnt++;
 121   2          if ( time_cnt >= 500 )
 122   2          {
 123   3            set_heat_val();
 124   3      
 125   3            if ( On_stay == 2 )  // stay on 模式下进行保护
 126   3            {
 127   4              cnt_heat_time++;
 128   4              if ( cnt_heat_time > overrang_time )
 129   4              {
 130   5                On_stay = 0;
 131   5                cnt_heat_time = 0;
 132   5                over_rang_time_std = 1;
 133   5                //gm_printf ( "On_stay_overrang \r\n" );
 134   5              }
 135   4      
 136   4            }
 137   3            if ( time_sec > 0 )
 138   3            {
 139   4      
 140   4              time_sec--;
 141   4              if ( Gap_protect_std == 2 )
 142   4              {
 143   5      
 144   5                cnt_heat_time++;
 145   5      
 146   5      
 147   5                if ( cnt_heat_time > overrang_time )
 148   5                {
 149   6                  over_rang_time_std = 1;
 150   6                  Gap_protect_std = 0;
 151   6                  cnt_heat_time = 0;
 152   6                  gm_printf ( "protect \r\n" );
 153   6                }
 154   5              }
 155   4            }
 156   3            else
 157   3            {
 158   4              if ( flash_info.timer != TIMER_ON )
 159   4              {
 160   5                set_device_state ( OFF );
 161   5                time_sec = 0;
 162   5                cnt_heat_time = 0;
 163   5                Gap_protect_std = 0;
 164   5                On_stay = 0;
 165   5                //ht1621_all_clear(); //定时时间到
 166   5                gm_printf ( "time off \r\n" );
 167   5              }
 168   4            }
 169   3            //  gm_printf("time_sec=%d \r\n",time_sec);
 170   3            time_cnt = 0;
 171   3          }
 172   2        }
 173   1        LCD_Display();
 174   1      }
 175          

C51 COMPILER V9.56.0.0   TIMER                                                             08/07/2020 15:18:25 PAGE 4   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    542    ----
   CONSTANT SIZE    =     85    ----
   XDATA SIZE       =     15    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
